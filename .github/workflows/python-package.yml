name: Python Package

on:
  workflow_dispatch:
  push:
    branches: [main, feature/**]
    paths-ignore:
      - 'fastapi_profiler/rustcore/**'
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [rust-package-published]
  workflow_run:
    workflows: ["Publish Rust Core"]
    types:
      - completed
    branches:
      - main
      - feature/**

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install poetry
        # Regenerate the lock file to ensure it's up to date with the latest Rust package
        poetry lock --no-update
        
        # Wait longer for PyPI to index the new rust package
        echo "Waiting for PyPI to index the latest fastapi-profiler-rust package..."
        sleep 180
        
        # Verify the package is available before proceeding
        echo "Verifying package availability..."
        MAX_ATTEMPTS=5
        ATTEMPT=1
        PACKAGE_AVAILABLE=false
        
        while [ $ATTEMPT -le $MAX_ATTEMPTS ] && [ "$PACKAGE_AVAILABLE" = "false" ]; do
          if pip install --no-deps --index-url https://pypi.org/simple/ fastapi-profiler-rust; then
            echo "Package is available on PyPI!"
            PACKAGE_AVAILABLE=true
          else
            echo "Attempt $ATTEMPT: Package not yet available, waiting..."
            sleep 60
            ATTEMPT=$((ATTEMPT+1))
          fi
        done
        
        if [ "$PACKAGE_AVAILABLE" = "false" ]; then
          echo "Warning: Package may not be available yet, but continuing anyway..."
        fi
        
        # Install dependencies with the updated lock file
        poetry install --with dev --extras standard

    - name: Run tests
      run: poetry run pytest
